from curve import LinearCurve, SquareRootCurve, LimitCurve, BezierCurve


def test_get_level():
    curve = LinearCurve()
    assert curve.name == "Linear"
    for x in range(256):
        assert curve.get_level(x) == x


def test_get_level_square_root():
    curve = SquareRootCurve()
    assert curve.name == "Square root"
    assert curve.get_level(0) == 0
    assert curve.get_level(25) == 80
    assert curve.get_level(255) == 255


def test_get_level_limit():
    curve = LimitCurve(limit=127)
    assert curve.name == "Limit"
    assert curve.limit == 127
    assert curve.get_level(0) == 0
    assert curve.get_level(255) == 127


def test_get_level_bezier():
    curve = BezierCurve()
    for x in range(256):
        assert curve.get_level(x) == x


def test_add_point_bezier():
    curve = BezierCurve()
    curve.add_point(127, 40)
    values = [
        (0, 0),
        (1, 0),
        (2, 0),
        (3, 0),
        (4, 0),
        (5, 0),
        (6, 0),
        (7, 0),
        (8, 0),
        (9, 0),
        (10, 0),
        (11, 0),
        (12, 0),
        (13, 0),
        (14, 0),
        (15, 0),
        (16, 0),
        (17, 0),
        (18, 0),
        (19, 0),
        (20, 0),
        (21, 0),
        (22, 0),
        (23, 0),
        (24, 0),
        (25, 0),
        (26, 0),
        (27, 0),
        (28, 0),
        (29, 0),
        (30, 0),
        (31, 0),
        (32, 0),
        (33, 0),
        (34, 0),
        (35, 0),
        (36, 0),
        (37, 0),
        (38, 0),
        (39, 0),
        (40, 0),
        (41, 0),
        (42, 0),
        (43, 0),
        (44, 0),
        (45, 0),
        (46, 0),
        (47, 0),
        (48, 1),
        (49, 1),
        (50, 1),
        (51, 1),
        (52, 1),
        (53, 1),
        (54, 1),
        (55, 2),
        (56, 2),
        (57, 2),
        (58, 2),
        (59, 2),
        (60, 3),
        (61, 3),
        (62, 3),
        (63, 3),
        (64, 3),
        (65, 4),
        (66, 4),
        (67, 4),
        (68, 5),
        (69, 5),
        (70, 5),
        (71, 5),
        (72, 6),
        (73, 6),
        (74, 6),
        (75, 7),
        (76, 7),
        (77, 7),
        (78, 8),
        (79, 8),
        (80, 8),
        (81, 9),
        (82, 9),
        (83, 10),
        (84, 10),
        (85, 11),
        (86, 11),
        (87, 11),
        (88, 12),
        (89, 12),
        (90, 13),
        (91, 13),
        (92, 14),
        (93, 14),
        (94, 15),
        (95, 16),
        (96, 16),
        (97, 17),
        (98, 17),
        (99, 18),
        (100, 18),
        (101, 19),
        (102, 20),
        (103, 20),
        (104, 21),
        (105, 22),
        (106, 22),
        (107, 23),
        (108, 24),
        (109, 25),
        (110, 25),
        (111, 26),
        (112, 27),
        (113, 28),
        (114, 28),
        (115, 29),
        (116, 30),
        (117, 31),
        (118, 32),
        (119, 33),
        (120, 34),
        (121, 34),
        (122, 35),
        (123, 36),
        (124, 37),
        (125, 38),
        (126, 39),
        (127, 41),
        (128, 42),
        (129, 43),
        (130, 44),
        (131, 45),
        (132, 46),
        (133, 47),
        (134, 48),
        (135, 49),
        (136, 50),
        (137, 51),
        (138, 53),
        (139, 54),
        (140, 55),
        (141, 56),
        (142, 57),
        (143, 59),
        (144, 60),
        (145, 61),
        (146, 63),
        (147, 64),
        (148, 65),
        (149, 66),
        (150, 68),
        (151, 69),
        (152, 71),
        (153, 72),
        (154, 73),
        (155, 75),
        (156, 76),
        (157, 78),
        (158, 79),
        (159, 80),
        (160, 82),
        (161, 83),
        (162, 85),
        (163, 86),
        (164, 88),
        (165, 89),
        (166, 91),
        (167, 92),
        (168, 94),
        (169, 96),
        (170, 97),
        (171, 99),
        (172, 100),
        (173, 102),
        (174, 104),
        (175, 105),
        (176, 106),
        (177, 108),
        (178, 110),
        (179, 111),
        (180, 113),
        (181, 115),
        (182, 117),
        (183, 118),
        (184, 120),
        (185, 122),
        (186, 123),
        (187, 125),
        (188, 127),
        (189, 129),
        (190, 130),
        (191, 132),
        (192, 134),
        (193, 136),
        (194, 138),
        (195, 139),
        (196, 141),
        (197, 143),
        (198, 145),
        (199, 147),
        (200, 148),
        (201, 150),
        (202, 152),
        (203, 154),
        (204, 156),
        (205, 158),
        (206, 160),
        (207, 161),
        (208, 163),
        (209, 165),
        (210, 167),
        (211, 169),
        (212, 171),
        (213, 173),
        (214, 175),
        (215, 177),
        (216, 179),
        (217, 181),
        (218, 183),
        (219, 185),
        (220, 186),
        (221, 188),
        (222, 190),
        (223, 192),
        (224, 194),
        (225, 196),
        (226, 198),
        (227, 200),
        (228, 202),
        (229, 204),
        (230, 206),
        (231, 208),
        (232, 210),
        (233, 212),
        (234, 214),
        (235, 216),
        (236, 218),
        (237, 220),
        (238, 222),
        (239, 224),
        (240, 226),
        (241, 228),
        (242, 230),
        (243, 232),
        (244, 234),
        (245, 236),
        (246, 238),
        (247, 240),
        (248, 242),
        (249, 244),
        (250, 246),
        (251, 248),
        (252, 250),
        (253, 252),
        (254, 254),
        (255, 255),
    ]
    for value in values:
        assert curve.get_level(value[0]) == value[1]
